[{"id":"8697230c.57da","type":"tab","label":"SOAP Server Example","disabled":false,"info":""},{"id":"1a0bc0dd.36dc2f","type":"inject","z":"8697230c.57da","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":280,"y":80,"wires":[["de526a87.332cc8"]]},{"id":"3aefc0c4.24bbb","type":"function","z":"8697230c.57da","name":"lower case","func":"msg.payload = msg.payload.toLowerCase();\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":180,"wires":[["4401a3a7.f88eec"]]},{"id":"de526a87.332cc8","type":"soapserver","z":"8697230c.57da","name":"Soap Server","func":"var soap = global.get('soap');\nvar http = global.get('http');\n\nvar port = context.get('port');\nvar wsdl = context.get('wsdl').trim();\n\nvar nodeRedService = {\n\tNodeRED: {\n\t\tNodeRED: {\n\t\t\tstartFlow: function(args, soapResponseCallback) {\n\t\t\t\tvar payload = args.payload;\n\t\t\t\tnode.send({\n\t\t\t\t\t\"payload\": payload,\n\t\t\t\t\t\"_soapServer_soapResponseCallback\": soapResponseCallback\n\t\t\t\t});\n\t\t\t},\n\t\t\tstartFlowOneWay: function(args) {\n\t\t\t\tconsole.log(\"startFlowOneWay\");\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar server = http.createServer(function(request, response){\n\tresponse.end(\"404: Not found: \" + request.url);\n});\n\nserver.listen(port);\nserver = soap.listen(server, \"/soap\", nodeRedService, wsdl, function() {\n\tnode.log('server initialized');\n});\n\nserver.log = function(type, data) {\n\tnode.log(type);\n\tnode.log(data);\n};\n\nnode.on(\"close\", function(callback) {\n\tserver.close(callback);\n});","port":"8001","wsdl":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><wsdl:definitions name=\"NodeRED\" targetNamespace=\"http://www.neilkolban.com/NodeRED/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tns=\"http://www.neilkolban.com/NodeRED/\" xmlns:wsdl=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">  <wsdl:types>    <xsd:schema targetNamespace=\"http://www.neilkolban.com/NodeRED/\">      <xsd:element name=\"NodeREDPayload\" type=\"tns:NodeREDPayload\"></xsd:element>      <xsd:complexType name=\"NodeREDPayload\">      t<xsd:sequence>      tt<xsd:element name=\"payload\" type=\"xsd:string\"></xsd:element>      t</xsd:sequence>      </xsd:complexType>    </xsd:schema>  </wsdl:types>  <wsdl:message name=\"startFlowRequest\">    <wsdl:part element=\"tns:NodeREDPayload\" name=\"parameters\" />  </wsdl:message>  <wsdl:message name=\"startFlowResponse\">    <wsdl:part element=\"tns:NodeREDPayload\" name=\"parameters\" />  </wsdl:message>  <wsdl:portType name=\"NodeRED\">    <wsdl:operation name=\"startFlow\">      <wsdl:input message=\"tns:startFlowRequest\"/>      <wsdl:output message=\"tns:startFlowResponse\"/>    </wsdl:operation>  </wsdl:portType>  <wsdl:binding name=\"NodeRED\" type=\"tns:NodeRED\">    <soap:binding style=\"document\" transport=\"http://schemas.xmlsoap.org/soap/http\"/>    <wsdl:operation name=\"startFlow\">      <soap:operation soapAction=\"http://www.neilkolban.com/NodeRED/startFlow\"/>      <wsdl:input>        <soap:body use=\"literal\"/>      </wsdl:input>      <wsdl:output>        <soap:body use=\"literal\"/>      </wsdl:output>    </wsdl:operation>  </wsdl:binding>  <wsdl:service name=\"NodeRED\">    <wsdl:port binding=\"tns:NodeRED\" name=\"NodeRED\">      <soap:address location=\"http://localhost:8001/soap\"/>    </wsdl:port>  </wsdl:service></wsdl:definitions>","outputs":1,"noerr":0,"x":330,"y":180,"wires":[["3aefc0c4.24bbb"]]},{"id":"4401a3a7.f88eec","type":"soapresponse","z":"8697230c.57da","name":"Soap Response","x":800,"y":180,"wires":[]}]